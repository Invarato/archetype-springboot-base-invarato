server.port=8080


# Properties
spring.application.name=${artifactId}
spring.profiles.active=dev




# Management/actuator
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.env.show-values=always
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true
management.info.git.mode=full


# Spring Devtools
spring.devtools.livereload.enabled=true
spring.devtools.restart.enabled=false
spring.devtools.add-properties=true
spring.main.lazy-initialization=true


# Logging
logging.pattern.console=#[[%clr(%d{yyyy-MM-dd'T'HH:mm:ss.SSSXXX}){faint}  %clr(%-5level) %clr(${HOSTNAME}){blue} %clr(${PID}){magenta} %clr(---){faint} %clr(${spring.application.name:-}]){faint} %clr([%15.15t]){faint} %clr(:){faint} %clr(%m){%level}%highlight(%wex){ERROR}%n]]#

logging.level.org.springframework.cloud.consul=DEBUG
logging.level.org.springframework.cloud.consul.config=DEBUG
logging.level.org.springframework.cloud.vault=DEBUG
logging.level.org.springframework.vault=DEBUG
logging.level.org.springframework.security=DEBUG


# Swagger: go to .../swagger-ui/index.html with http://localhost:8080/docs:
springdoc.swagger-ui.path=/docs



#spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
#spring.datasource.username=myuser
#spring.datasource.password=secret

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true


# Liquibase
spring.liquibase.enabled=false

# Docker compose
spring.docker.compose.enabled=true
spring.docker.compose.file=compose-app.yml
spring.docker.compose.start.skip=never


# Redis
# redis configuration for caching
spring.cache.type=redis
#spring.cache.type=none

#spring.data.redis.host=localhost
#spring.data.redis.host=redis_${artifactId}_container
#spring.data.redis.port=6379
#spring.data.redis.password=

# Opcional Configuracion del tiempo de inactividad del pool de conexion
spring.data.redis.lettuce.pool.max-active=10
spring.data.redis.lettuce.pool.max-idle=10
spring.data.redis.lettuce.pool.min-idle=1

# Duration (10s, 5m, 24h, 7d, etc.)
spring.cache.redis.time-to-live=24h
spring.cache.redis.key-prefix=${spring.application.name}:${spring.profiles.active}
spring.cache.redis.use-key-prefix=true
spring.cache.redis.cache-null-values=true
spring.cache.redis.enable-statistics=true
